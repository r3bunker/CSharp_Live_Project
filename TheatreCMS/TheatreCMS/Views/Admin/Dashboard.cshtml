@model TheatreCMS.Models.AdminSettings

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@{
    ViewBag.Title = "Dashboard";
}

<!DOCTYPE html>

<h1 id="admin-dash-title" class="mt-4 mb-3">Admin Dashboard</h1>

<!-- Admin Nav Top-->
<nav class="navbar navbar-expand-lg mb-4 justify-content-center">
    <button class="navbar-toggler admin-dash-collapse-btn" type="button" data-toggle="collapse" data-target="#navbarNavAltMarkup" aria-controls="navbarNavAltMarkup" aria-expanded="false" aria-label="Toggle navigation">
        <span class="navbar-toggler-icon admin-dash-collapse-btn-icon"><i class="fas fa-bars"></i></span>
    </button>
    <div class="collapse navbar-collapse justify-content-center" id="navbarNavAltMarkup">
        <div>
            <ul class="navbar-nav">
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "DisplayInfo")">Info</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "DisplayLinks")">Display Links</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "ContentSection")">Content Section</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "Productions")">Productions</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "CastMembers")">Cast Members</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "Part")">Part</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("Index", "Subscriber", new { area = "Subscribers" })">Subscriber</a>
                </li>
                <li class="nav-item">
                    <a class="admin-dash-btn nav-link" href="@Url.Action("DonorList", "Admin")">Donor List</a>
                </li>

            </ul>
        </div>
    </div>
</nav>
@*<div  id="admin-dash" class="mb-4">
        <ul>
            <li>
                <a class="admin-dash-btn" href="@Url.Action("Index", "DisplayInfo")">Info</a>
            </li>
            <li>
              <a class="admin-dash-btn" href="@Url.Action("Index", "DisplayLinks")">DisplayLinks</a>
            </li>

            <li>
              <a class="admin-dash-btn" href="@Url.Action("Index", "ContentSection")">Content Section</a>
            </li>
            <li>
              <a class="admin-dash-btn" href="@Url.Action("Index", "Productions")">Productions</a>
            </li>
            <li>
              <a class="admin-dash-btn" href="@Url.Action("Index", "CastMembers")">Cast Members</a>
            </li>
            <li>
              <a class="admin-dash-btn" href="@Url.Action("Index", "Part")">Part</a>
            </li>
            <li>
              <a class="admin-dash-btn" href="@Url.Action("Index", "Subscriber", new { area = "Subscribers" })">Subscriber</a>
            </li>
            <li>
              <a class="admin-dash-btn" href="@Url.Action("DonorList", "Admin")">Donor List</a>
            </li>
        </ul>
    </div>*@
<!-- End Admin Nav Top-->
<!--Form-->
<div class="container">
    <!-- display current productions -->
    <div id="dashboard-section-container">

        <h4 class="admin_prod_heading my-3">Current Productions</h4>

        <table class="admin-tables mx-3">
            @{
                foreach (var prod in ViewData["CurrentProductionList"] as List<TheatreCMS.Models.Production>)
                {
                    <tr class="dashboard-subsection">
                        <td>
                            <p class="h5">
                                @prod.Title <span class="dashboard-badges small mx-3">
                                    @Html.ActionLink("Edit", "Edit", "Productions", new { id = prod.ProductionId }, new { @class = "badge badge-pill" }) |
                                    @Html.ActionLink("Delete", "Delete", "Productions", new { id = prod.ProductionId }, new { @class = "badge badge-pill" })
                                </span>
                            </p>
                            <p class="mx-3"> @prod.OpeningDay.ToString("MM/dd/yy")-@prod.ClosingDay.ToString("MM/dd/yy")</p>
                        </td>
                    </tr>

                }
            }

        </table>

        <div class="h5 my-2">
            @Html.ActionLink("Add", "Create", "Productions", null, new { @class = "badge badge-pill" })
        </div>
    </div>
    <!--ADD for Alert Message-->
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <!--END-->
    <!-- Display models without photos -->
    <div id="dashboard-section-container">
        <h4 class="my-3" style="color: var(--secondary-color);">Models Without Photos</h4>

        @{
            if (Model.models_missing_photos.Productions.Count() > 0)
            {
                <p class="h5">Productions:</p>
                foreach (var production in (List<TheatreCMS.Models.Production>)ViewData["ProductionsWithoutPhotos"])
                {
                    <p class="dashboard-subsection">
                        @production.Title
                        <span class="dashboard-badges mx-3">
                            @Html.ActionLink("Edit", "Edit", "Productions", new { id = production.ProductionId }, new { @class = "badge badge-pill" }) |
                            @Html.ActionLink("Delete", "Delete", "Productions", new { id = production.ProductionId }, new { @class = "badge badge-pill" })
                        </span>
                    </p>
                }
            }

            if (Model.models_missing_photos.ProductionPhotos.Count() > 0)
            {
                <p class="h5">Production Photos:</p>
                foreach (var prodPhotos in (List<TheatreCMS.Models.ProductionPhotos>)ViewData["ProductionPhotosWithoutPhotos"])
                {
                    <p class="dashboard-subsection">
                        @prodPhotos.Title
                        <span class="dashboard-badges mx-3">
                            @Html.ActionLink("Edit", "Edit", "ProductionPhotos", new { id = prodPhotos.ProPhotoId }, new { @class = "badge badge-pill" }) |
                            @Html.ActionLink("Delete", "Delete", "ProductionPhotos", new { id = prodPhotos.ProPhotoId }, new { @class = "badge badge-pill" })
                        </span>
                    </p>
                }
            }

            if (Model.models_missing_photos.Sponsors.Count() > 0)
            {
                <p class="h5">Sponsors:</p>
                foreach (var sponsors in (List<TheatreCMS.Models.Sponsor>)ViewData["SponsorsWithoutPhotos"])
                {
                    <p class="dashboard-subsection">
                        @sponsors.Name
                        <span class="dashboard-badges mx-3">
                            @Html.ActionLink("Edit", "Edit", "Sponsors", new { id = sponsors.SponsorId }, new { @class = "badge badge-pill" }) |
                            @Html.ActionLink("Delete", "Delete", "Sponsors", new { id = sponsors.SponsorId }, new { @class = "badge badge-pill" })
                        </span>
                    </p>
                }
            }

            if (Model.models_missing_photos.CastMembers.Count() > 0)
            {
                <p class="h5">Cast Members:</p>
                foreach (var castMembers in (List<TheatreCMS.Models.CastMember>)ViewData["CastMembersWithoutPhotos"])
                {
                    <p class="dashboard-subsection">
                        @castMembers.Name
                        <span class="dashboard-badges mx-3">
                            @Html.ActionLink("Edit", "Edit", "CastMembers", new { id = castMembers.CastMemberID }, new { @class = "badge badge-pill" }) |
                            @Html.ActionLink("Delete", "Delete", "CastMembers", new { id = castMembers.CastMemberID }, new { @class = "badge badge-pill" })
                        </span>
                    </p>
                }
            }
        }
    </div>
    <!-- Display models without photos END -->
    @using (Html.BeginForm("SettingsUpdate", "Admin", FormMethod.Post))
    {
        <div id="admin-formspace">
            CURRENT SEASON:
            <br />
            <div>@ViewData["nextSeasonNotification"]</div>
            <input type="number" name="Current_Season" value="@Html.DisplayFor(model => model.current_season)">
            <!--Add Alert Message for Season Error-->
            @Html.ValidationMessageFor(model => model.current_season, "", new { @class = "text-danger" })
            <span class="error" id="Current_Season_error"></span>
            @{
                foreach (ModelState modelState in ViewData.ModelState.Values)
                {
                    foreach (ModelError error in modelState.Errors)
                    {
                        <p>error</p>;
                    }
                }
            }
            <!--End Add Alert-->
            <br />
            <br />
            <br />
            SEASON PRODUCTIONS:
            <br />
            Fall:
            @*<input type="number" name="Winter" value="@Html.DisplayFor(model => model.season_productions.winter)"><br>*@
            <div>
                @Html.DropDownListFor(model => model.season_productions.fall, (IEnumerable
                <SelectListItem>)ViewData["ProductionList"])
            </div>
            Winter:
            @*<input type="number" name="Fall" value="@Html.DisplayFor(model => model.season_productions.fall)"><br>*@
            <div>
                @Html.DropDownListFor(model => model.season_productions.winter, (IEnumerable
                <SelectListItem>)ViewData["ProductionList"])
            </div>
            Spring:
            @*<input type="number" name="Spring" value="@Html.DisplayFor(model => model.season_productions.spring)"><br>*@
            <div>
                @Html.DropDownListFor(model => model.season_productions.spring, (IEnumerable
                <SelectListItem>)ViewData["ProductionList"])
            </div>
            <br />
            <br />

            RECENT DEFINITION:
            <br />
            <input type="radio" name="recent_definition.bUsingSpan" value="false" id="recentDefDateSel"
                   @if (!Model.recent_definition.bUsingSpan) { @: checked
                   } />

            <label for="recentDefDateSel">Date:</label>

            <br />

            <input align="center" type="date" name="recent_definition.date" value="@Model.recent_definition.date.ToString("yyyy-MM-dd")">

            <br />

            <br />

            <input type="radio" name="recent_definition.bUsingSpan" value="true" id="recentDefSpanSel"
                   @if (Model.recent_definition.bUsingSpan) { @: checked
                   } />

            <label for="recentDefDateSel">Span (Months):</label>

            <br />

            <input align="center" type="number" name="recent_definition.span" value="@Html.DisplayFor(model => model.recent_definition.span)">

            <br />

            <br />

            <br />
            ONSTAGE:
            @*<input type="number" name="Onstage" value="@Html.DisplayFor(model => model.onstage)"><br /><br />*@
            <div>
                @Html.DropDownListFor(model => model.on_stage, (IEnumerable
                <SelectListItem>)ViewData["ProductionList"])
            </div>
            <br />
            <br />
            <br />
            @* Inputs for Footer Information *@
            FOOTER INFORMATION<br />
            Address - Street<br />
            <input type="text" name="FooterInfo.AddressStreet" value="@Html.DisplayFor(model => model.FooterInfo.AddressStreet)">
            Address - City, State, Zip<br />
            <input type="text" name="FooterInfo.AddressCityStateZip" value="@Html.DisplayFor(model => model.FooterInfo.AddressCityStateZip)">
            Phone Number - Sales<br />
            <input type="text" name="FooterInfo.PhoneSales" value="@Html.DisplayFor(model => model.FooterInfo.PhoneSales)">
            Phone Number - General<br />
            <input type="text" name="FooterInfo.PhoneGeneral" value="@Html.DisplayFor(model => model.FooterInfo.PhoneGeneral)">
            Copyright Year<br />
            <input type="text" name="FooterInfo.CopyrightYear" value="@Html.DisplayFor(model => model.FooterInfo.CopyrightYear)">
            Email Address<br />
            <input type="text" name="FooterInfo.EmailAddress" value="@Html.DisplayFor(model => model.FooterInfo.EmailAddress)">
            <br />
            <br />
            <br />
            <button type="submit">Submit</button>
        </div>
    }

</div>

@Scripts.Render("~/bundles/jquery")
<script>
    //display and hide edit and delete badges on hover
    $(".dashboard-subsection").hover(
        function () {
            $(this).find(".dashboard-badges").show();
        },
        function () {
            $(this).find(".dashboard-badges").hide();
        }
    );
</script>
<!--End Form-->
