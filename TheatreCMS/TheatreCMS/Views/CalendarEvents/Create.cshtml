@model TheatreCMS.Models.CalendarEvent

@{
    ViewBag.Title = "Create";
}


<h2>Create</h2>



@using (Html.BeginForm())
{
   
    @Html.AntiForgeryToken()
    <div class="formContainer2 ">
        <div class="form-horizontal">
            <h4 class="formHeader" >CalendarEvent</h4>
            <hr />
            <div class="inputBox2">
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Title, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.Title, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Title, "", new { @class = "text-white" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control", @type = "datetime-local" } })
                        @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-white" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-4 inputLabel"})
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control datepicker", @type = "datetime-local" } })
                        @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-white" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.TicketsAvailable, htmlAttributes: new { @class = "control-label col-md-4 inputLabel" })
                    <div class="col-md-10 formBox">
                        @Html.EditorFor(model => model.TicketsAvailable, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.TicketsAvailable, "", new { @class = "text-white" })
                    </div>
                </div>

                <div class="form-group">
                    <label class="inputLabel col-md-4"> &nbsp; &nbsp;Production</label>
                    <div class="col-md-10 formBox">
                        @Html.DropDownList("Productions", (IEnumerable<SelectListItem>)ViewData["Productions"],"N/A" , htmlAttributes: new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.ProductionId,"", new { @class = "text-white" }) 
                    </div>
                </div>

                <div class="form-group">
                    <div class="col-md-offset-2 col-md-10 formBox">
                        <input type="submit" value="Create" class="submitButton2" />
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
